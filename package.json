{
  "name": "dexter",
  "private": true,
  "version": "0.1.0",
  "description": "Dexter (formerly Clanka) â€“ Token analysis UI + MCP",
  "type": "module",
  "license": "UNLICENSED",
  "scripts": {
    "start": "node token-ai/server.js",
    "start:ui": "node token-ai/server.js --port ${TOKEN_AI_UI_PORT:-3017}",
    "routes": "DOTENV_CONFIG_PATH=.env node -r dotenv/config token-ai/scripts/test-server-routes.mjs",
    "rt": "timeout 60s env DOTENV_CONFIG_PATH=.env node -r dotenv/config token-ai/scripts/test-server-routes.mjs",
    "r": "npm run -s routes",
    "mcp:local": "env DOTENV_CONFIG_PATH=.env TOKEN_AI_MCP_PORT=3930 TOKEN_AI_MCP_URL=http://localhost:3930/mcp node -r dotenv/config token-ai/scripts/test-mcp-http.mjs",
    "mcp:prod": "env DOTENV_CONFIG_PATH=.env TOKEN_AI_MCP_URL=https://dexter.cash/mcp node -r dotenv/config token-ai/scripts/test-mcp-http.mjs",
    "ok": "node token-ai/scripts/ok.mjs",
    "ui:status": "systemctl is-active dexter-ui",
    "mcp:status": "systemctl is-active dexter-mcp",
    "ui:restart": "sudo systemctl restart dexter-ui",
    "mcp:restart": "sudo systemctl restart dexter-mcp",
    "mcp": "node token-ai/mcp/server.mjs",
    "mcp:http": "node token-ai/mcp/http-server.mjs",
    "mcp:http:oauth": "node token-ai/mcp/http-server-oauth.mjs",
    "status": "node token-ai/scripts/status.mjs",
    "ops:ui:status": "systemctl status dexter-ui --no-pager",
    "ops:mcp:status": "systemctl status dexter-mcp --no-pager",
    "ops:ui:logs": "journalctl -u dexter-ui -f -n 200 --output=short-iso",
    "ops:mcp:logs": "journalctl -u dexter-mcp -f -n 200 --output=short-iso",
    "ops:restart": "sudo systemctl restart dexter-ui dexter-mcp",
    "ops:ui:restart": "sudo systemctl restart dexter-ui",
    "ops:mcp:restart": "sudo systemctl restart dexter-mcp",
    "test:mcp": "node token-ai/scripts/test-mcp-all.mjs",
    "test:mcp:http": "TOKEN_AI_MCP_PORT=3930 TOKEN_AI_MCP_URL=http://localhost:3930/mcp DOTENV_CONFIG_PATH=.env node -r dotenv/config token-ai/scripts/test-mcp-http.mjs",
    "test:mcp:trading": "node token-ai/scripts/test-mcp-trading.mjs",
    "mcp:balances": "node token-ai/scripts/mcp-trade.mjs balances",
    "mcp:buy": "node token-ai/scripts/mcp-trade.mjs buy",
    "mcp:sell": "node token-ai/scripts/mcp-trade.mjs sell",
    "mcp:search": "node token-ai/scripts/mcp-research.mjs search",
    "mcp:fetch": "node token-ai/scripts/mcp-research.mjs fetch",
    "mcp:crawl:site": "node token-ai/scripts/mcp-research.mjs crawl:site",
    "mcp:crawl:urls": "node token-ai/scripts/mcp-research.mjs crawl:urls",
    "mcp:smart:fetch": "node token-ai/scripts/mcp-research.mjs smart:fetch",
    "mcp:note:write": "node token-ai/scripts/mcp-research.mjs note:write",
    "mcp:note:list": "node token-ai/scripts/mcp-research.mjs note:list",
    "mcp:note:read": "node token-ai/scripts/mcp-research.mjs note:read",
    "mcp:note:delete": "node token-ai/scripts/mcp-research.mjs note:delete",
    "mcp:finalize": "node token-ai/scripts/mcp-research.mjs finalize",
    "mcp:run:quick": "node token-ai/scripts/mcp-research.mjs run:quick",
    "test:mcp:proxy": "node token-ai/scripts/test-mcp-proxy.mjs",
    "test:server:routes": "node token-ai/scripts/test-server-routes.mjs",
    "voice:smoke": "node token-ai/scripts/voice-smoke.mjs",
    "voice:smoke:say": "node token-ai/scripts/voice-smoke.mjs --say 'Dexter smoke test.'",
    "voice:smoke:wav": "node token-ai/scripts/voice-smoke.mjs --wav smoke.wav",
    "voice:smoke:wav:ts": "node token-ai/scripts/voice-smoke.mjs --wav",
    "voice:smoke:say:wav": "node token-ai/scripts/voice-smoke.mjs --say 'Dexter smoke test.' --wav"
  },
  "dependencies": {
    "@logtail/node": "^0.3.3",
    "@logtail/winston": "^0.4.7",
    "axios": "^1.11.0",
    "chalk": "^5.3.0",
    "cheerio": "^1.1.2",
    "dotenv": "^17.2.1",
    "node-fetch": "^3.3.2",
    "node-ipinfo": "^3.4.1",
    "winston": "^3.13.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@prisma/client": "^6.7.0",
    "prisma": "^6.7.0"
  }
}
