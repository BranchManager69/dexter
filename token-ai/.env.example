# Token AI Configuration
# Copy this to .env and customize

# OpenAI API Key (required)
OPENAI_API_KEY=

# Birdeye API Key (required)
BIRDEYE_API_KEY=

# Knowledge Module Selection
# These control which prompts/knowledge files are loaded

# Voice/tone (options: trencher, analytical, neutral)
TOKEN_AI_VOICE=trencher

# Domain knowledge (options: market-pulse, market-landscape, trenches-terminology, knowledge-base)
# To load multiple domains, use comma-separated list: market-pulse,trenches-terminology
TOKEN_AI_DOMAIN=knowledge-base

# Overrides for specific sections (comma-separated)
# Example: scam-detection,token-age-signals
TOKEN_AI_OVERRIDES=

# Private knowledge file (relative to token-ai/prompts/)
# TOKEN_AI_PRIVATE=system.private.md

# Agent Memory (enabled by default)
TOKEN_AI_AGENT_MEMORY=1

# Max rounds/turns (default: 20)
TOKEN_AI_MAX_ROUNDS=20

# Cache TTL in minutes (0 = no cache)
TOKEN_AI_CACHE_TTL_MIN=0

# OHLCV Settings
SKIP_OHLCV=0
ANALYZER_OHLCV_HOURS=6
ANALYZER_OHLCV_INTERVAL=1

# Parallel tool calls (experimental)
TOKEN_AI_PARALLEL_TOOLS=0

# Finalize reasoning effort (low/medium/high)
TOKEN_AI_FINALIZE_REASONING=low

# Realtime Voice (optional)
# Server will mint ephemeral tokens for browser WebRTC at POST /realtime/sessions.
# If set, remote callers must include header x-agent-token with this value.
TOKEN_AI_EVENTS_TOKEN=
# Default voice/model for Realtime sessions
TOKEN_AI_REALTIME_MODEL=gpt-realtime
TOKEN_AI_REALTIME_VOICE=verse

# Solana + Infra (optional)
SOLANA_RPC_ENDPOINT=
HELIUS_API_KEY=
JUPITER_API_KEY=
SOLANA_MAINNET_HTTP=
SOLANA_MAINNET_WSS=

# Database & Secrets (optional)
DATABASE_URL=
WALLET_ENCRYPTION_KEY=

# Default wallet for voice/trading (optional)
# If set, voice agent uses this wallet_id when none is specified.
TOKEN_AI_DEFAULT_WALLET_ID=

# Dev/test: expose admin-owned wallets to all users (UI lists)
# 0 = off (default), 1 = on (show admin wallets like your personal testing wallet)
TOKEN_AI_EXPOSE_ADMIN_WALLETS=0

# Dev/test: a lightweight user token echoed to the browser (x-user-token).
# Use this to simulate per-user calls from the Live UI during development.
TOKEN_AI_DEV_USER_TOKEN=

# Logging (optional)
LOGTAIL_TOKEN=
LOGTAIL_ENDPOINT=
LOGTAIL_SOURCE=
# Voice debug log size (ring buffer)
TOKEN_AI_VOICE_LOG_LIMIT=1000
